{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.9.0.0",
        "fileVersion": "4.9.2-3.24129.6 (9934fb9e)",
        "semanticVersion": "4.9.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Service/ContactServiceTest.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 49,
                  "endLine": 35,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'ISetup<IRegionsRepository, Task<Regions>>' cannot be used for parameter 'mock' of type 'IReturns<IRegionsRepository, Task<Regions?>>' in 'IReturnsResult<IRegionsRepository> ReturnsExtensions.ReturnsAsync<IRegionsRepository, Regions?>(IReturns<IRegionsRepository, Task<Regions?>> mock, Regions? value)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Service/ContactServiceTest.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Service/RegionsServiceTest.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 49,
                  "endLine": 35,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'ISetup<IRegionsRepository, Task<Regions>>' cannot be used for parameter 'mock' of type 'IReturns<IRegionsRepository, Task<Regions?>>' in 'IReturnsResult<IRegionsRepository> ReturnsExtensions.ReturnsAsync<IRegionsRepository, Regions?>(IReturns<IRegionsRepository, Task<Regions?>> mock, Regions? value)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Service/RegionsServiceTest.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Controller/TokenControllerTest.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 85,
                  "endLine": 46,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'ISetup<ITokenService, Task<string>>' cannot be used for parameter 'mock' of type 'IReturns<ITokenService, Task<string?>>' in 'IReturnsResult<ITokenService> ReturnsExtensions.ReturnsAsync<ITokenService, string?>(IReturns<ITokenService, Task<string?>> mock, string? value)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Controller/TokenControllerTest.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Service/UserServiceTest.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 47,
                  "endLine": 70,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'ISetup<IUsersRepository, Task<Users>>' cannot be used for parameter 'mock' of type 'IReturns<IUsersRepository, Task<Users?>>' in 'IReturnsResult<IUsersRepository> ReturnsExtensions.ReturnsAsync<IUsersRepository, Users?>(IReturns<IUsersRepository, Task<Users?>> mock, Users? value)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Service/UserServiceTest.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Controller/ContactsInfoControllerTest.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 100,
                  "endLine": 110,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'ISetup<IContactsService, Task<Contact>>' cannot be used for parameter 'mock' of type 'IReturns<IContactsService, Task<Contact?>>' in 'IReturnsResult<IContactsService> ReturnsExtensions.ReturnsAsync<IContactsService, Contact?>(IReturns<IContactsService, Task<Contact?>> mock, Contact? value)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/CodeZombie/source/TechChallenge/TechChallenge_ControleContatos.Test/Controller/ContactsInfoControllerTest.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 13,
                  "endLine": 110,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8620": {
          "id": "CS8620",
          "shortDescription": "Argument cannot be used for parameter due to differences in the nullability of reference types.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8620)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        }
      }
    }
  ]
}