name: CI

on:
  push:
    branches:
      - "develop"
  pull_request:
    branches:
      - "develop"
  workflow_dispatch:

jobs:
  dockerhub:
    name: Executando primeiro job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: 'yurisbk'
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: 'yurisbk/techchallenge_imagem:latest'
          push: true

  build_and_test:
    name: Executando segundo job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.204'

      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib

      - name: Start PostgreSQL
        run: sudo service postgresql start

      - name: Setup PostgreSQL
        run: |
          sudo -u postgres psql -c "CREATE USER root WITH PASSWORD 'root';"
          sudo -u postgres psql -c "CREATE DATABASE root;"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE root TO root;"

      - name: Run database initialization script
        run: psql -U root -d root -f scripts/docker-database-initial.sql
        env:
          PGPASSWORD: root

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if psql -U root -d root -c '\q'; then
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 1
          done
        env:
          PGPASSWORD: root

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run unit tests
        run: dotnet test --no-build --filter Category=Unity --verbosity normal

      - name: Run integration tests
        run: dotnet test --no-build --filter Category=Integration --verbosity normal
        env:
          PGPASSWORD: root
