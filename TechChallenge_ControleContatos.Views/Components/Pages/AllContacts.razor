@page "/listcontacts"
@using TechChallenge_ControleContatos.Service.DTO
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<h1>Lista de Contatos</h1>

@if (contacts == null)
{
    <p>Carregando...</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in contacts)
            {
                <tr>
                    <td>@contact.Id</td>
                    <td>@contact.Fullname</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>EditContact(contact.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="()=>DeleteContact(contact.Id)">Excluir</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<ContactDto> contacts;

    protected override async Task OnInitializedAsync()
    {
        contacts = await httpClient.GetFromJsonAsync<List<ContactDto>>("api/GetAllContacts");
    }

    private void EditContact(int id)
    {
        NavigationManager.NavigateTo($"/editcontact/{id}");
    }

    private async Task DeleteContact(int id)
    {
        var response = await httpClient.DeleteAsync($"api/DeleteContact/{id}");
        if (response.IsSuccessStatusCode)
        {
            contacts.RemoveAll(c => c.Id == id);
            StateHasChanged();
        }
    }
}